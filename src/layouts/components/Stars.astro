---
// Componente de estrellas aleatorias para el banner
const STAR_COUNT = 150;
const stars = Array.from({ length: STAR_COUNT }, (_, i) => {
  // Posición aleatoria en % (para cubrir todo el banner)
  const top = Math.random() * 100;
  const left = Math.random() * 100;
  // Tamaño aleatorio entre 1px y 3px
  const size = 1 + Math.random() * 2;
  // Opacidad aleatoria entre 0.3 y 1
  const opacity = 0.3 + Math.random() * 0.7;
  // Duración de parpadeo aleatoria entre 2s y 4s
  const duration = 2 + Math.random() * 2;
  // Retardo aleatorio para que no parpadeen igual
  const delay = Math.random() * 2;
  return { top, left, size, opacity, duration, delay };
});

// Delays aleatorios para las estrellas fugaces
const shootingDelay1 = Math.random() * 6 + 4; // entre 4 y 10 segundos
const shootingDelay2 = Math.random() * 8 + 6; // entre 6 y 14 segundos
const shootingDelay3 = Math.random() * 10 + 8; // entre 8 y 18 segundos
---
<style is:global>
.stars-random {
  position: absolute;
  inset: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 1;
}
.star {
  position: absolute;
  border-radius: 50%;
  background: white;
  box-shadow: 0 0 6px 2px rgba(255,255,255,0.15);
  will-change: opacity;
  animation-name: blink-star;
  animation-iteration-count: infinite;
  animation-direction: alternate;
}
@keyframes blink-star {
  0% { opacity: 1; }
  50% { opacity: 0.3; }
  100% { opacity: 1; }
}
.shooting-star {
  position: absolute;
  top: 50%;
  right: -10%;
  width: 120px;
  height: 2px;
  background: linear-gradient(-90deg, rgba(255,255,255,0), white);
  opacity: 0.8;
  filter: blur(1px);
  border-radius: 2px;
  pointer-events: none;
  z-index: 2;
  animation: shooting-horizontal 1.2s linear;
  animation-delay: var(--shooting-delay, 0s);
}

.shooting-star.high {
  top: 30%;
  width: 150px;
  height: 2.5px;
  animation-duration: 1.5s;
}

.shooting-star.higher {
  top: 15%;
  width: 180px;
  height: 3px;
  animation-duration: 1.8s;
  opacity: 0.6;
}

@keyframes shooting-horizontal {
  0% {
    right: -10%;
    opacity: 0;
  }
  10% {
    opacity: 1;
  }
  80% {
    opacity: 1;
  }
  100% {
    right: 110%;
    opacity: 0;
  }
}
</style>

<div class="stars-random" id="stars-area">
  {stars.map(star => (
    <div
      class="star"
      style={`top:${star.top}%;left:${star.left}%;width:${star.size}px;height:${star.size}px;opacity:${star.opacity};animation-duration:${star.duration}s;animation-delay:${star.delay}s;`}
    />
  ))}
</div>

<script is:inline define:vars={{ shootingDelay1, shootingDelay2, shootingDelay3 }}>
  window.addEventListener('DOMContentLoaded', () => {
    let area = document.getElementById('stars-area');
    function createShootingStar(type = '', delay = 0) {
      const star = document.createElement('div');
      star.className = `shooting-star${type ? ' ' + type : ''}`;
      star.style.setProperty('--shooting-delay', `${delay}s`);
      area.appendChild(star);

      star.addEventListener('animationend', () => {
        star.remove();
        // Recrear la estrella con un nuevo delay aleatorio
        setTimeout(() => {
          let newDelay;
          switch(type) {
            case 'higher':
              newDelay = Math.random() * 10 + 8; // 8-18s
              break;
            case 'high':
              newDelay = Math.random() * 8 + 6; // 6-14s
              break;
            default:
              newDelay = Math.random() * 6 + 4; // 4-10s
          }
          createShootingStar(type, newDelay);
        }, delay * 1000);
      });
    }

    // Iniciar las tres estrellas fugaces con diferentes delays
    createShootingStar('', shootingDelay1);
    createShootingStar('high', shootingDelay2);
    createShootingStar('higher', shootingDelay3);
  });
</script>
